快捷键
===
#查看已经定义的快捷键

1. vim命令行中输入：
```
:verbose map <所要查找的快捷键>
```
2. 在normal模式下：
```
在normal模式下光标停在某个字符上ga可以查看该字符的ascii码
```

#Vim下快速移动光标
```
ctrl + b 往上翻屏幕
ctrl + f 往下翻屏幕
w 往右移动一个单词
b 往左移动一个单词
e → 到下一个单词的结尾。
0 → 数字零，到行头
^ → 到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）
$ → 到本行行尾
g_ → 到本行最后一个不是blank字符的位置。
t,→ 到逗号前的第一个字符。逗号可以变成其它字符。
f,→ 到第一个逗号上。逗号可以变成其它字符。
F 和 T 和 f 和 t 一样，只不过是相反方向。
J → 把所有的行连接起来（变成一行）
#H：跳转到当前屏的第#行。
#L：跳转到当前屏的倒数第#行。
#G: 15G,跳转到15行。
:#：跳转到#行。
zt: 当前编辑行置为屏顶。
zz: 当前编辑行置为屏中。
zb: 当前编辑行置为屏底。
gk: 移动到上一行的当前位置（长行时可用）
gj: 移动到下一行的当前位置（长行时可用）
:n1,n2 m n3：将n1行到n2行之间的内容移至n3行下。
:n1,n2 co n3：复制第n1行到第n2行之间的内容到第n3行后面。
n1,n2 d：将n1,n2行之间的内容删除。
]c 下一差异(vim -d )
[c 上一差异
区域选择 <action>a<object> 或 <action>i<object>
action可以是任何的命令，如 d (删除), y (拷贝), v (可以视模式选择)。
object 可能是： w 一个单词， W 一个以空格为分隔的单词， s 一个句字， p 一个段落。也可以是一个特别的字符："、 '、 )、 }、 ]。
```

#配对符号操作：
```
ci + 配对符号(",',{,(等)) 修改最相邻的符号内的内容，不包括符号
ca + 配对符号(",',{,(等)) 修改最相邻符号内的内容，包括符号
di,da 表示删除
yi'：复制配对标点符号中的文本内容。
vi'：选中配对标点符号中的文本内容。
```

#删，改，复制
```
s：替换当前一个光标所处字符。
C-w I模式下删除前一个单词
X: 每按一次，删除光标所在位置的前面一个字符。
x: 每按一次，删除光标所在位置的后面一个字符。
#x: 删除光标所在位置后面#个字符。
#S：删除 # 行，并以新文本代替。
yaB 这个命令会将当前光标所在的代码块复制（{} 括起来的内容，包括花括号本身）
r 替换：r 替换光标所在那一个字符；
R 一直替换所在文字，直到按下Esc键为止（常用）
:n,ns/one/two/g
:g/^#/d 删除所有以「#」打头的行
:g/^$/d 删除所有空行
```

#修改，删除，复制(c表示修改，d表示删除)
```
cw: 更改光标所在处的字到字尾处。
c#w: c3w 修改3个字符。
C：修改到行尾。
d0 删除光标到行首
D：删除到行尾。
dw 删除光标所在位置后直到单词结束
daw 删除一个单词
dap 删除一段
dt" → 删除所有的内容，直到遇到双引号 "
d4w: 删除4个word。
V有关操作:
块操作: <C-v>,<v>，<S-V>
块操作，典型的操作： 0 <C-v> <C-d> I-- [ESC]
^ → 到行头
<C-v> → 开始块操作
<C-d> → 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)
I-- [ESC] → I是行首插入，插入“--”，按ESC键来为每一行生效。（r为修改某个字符）
J → 把所有的行连接起来（变成一行）
< 或 > → 左右缩进
= → 自动给缩进 （陈皓注：这个功能相当强大，我太喜欢了）
<C-v>
选中相关的行 (可使用 j 或 <C-d> 或是 /pattern 或是 % 等……)
$ 到行最后
A（行尾插入）, 输入字符串，按 ESC。
```

#进入插入模式
```
i 在光标的字之前
a 在光标的字之后
o 光标的下一行
I 在光标的行首
A 在光标的行尾
O 在光标的上一行
```

#搜索
```
:%s/xxx//gn 显示搜索出来xxx的个数
:%s/xxx/yyy/g 替换xxx为yyy
:10,20s/xxx/gn 显示10到20行出现xxx的个数
七. 大小写转换：
gu: 把选择范围全部小写。
gU: 把选择范围全部大写。
gUU: 将当前行的字母改为大写。
guu: 将当前行的字母改为小写。
gUw: 将当前光标下的单词改为大写。
guw: 将当前光标下的单词改为小写。
gggUG 整篇大写:
ggguG 整篇小写：
gUiw 这个命令会将当前光标所在的 word 全部变成大写
```

#组合键
```
<start position><command><end position>
例如 0y$ 命令意味着：
0 → 先到行头
y → 从这里开始拷贝
$ → 拷贝到本行最后一个字符
基本操作 hjkl
到顶部 gg
到底部 G
% 移动到对应括号
NG → 到第 N 行
删除一行 dd
删除多行 ndd，例如2dd表示删除两行
复制一行 yy
复制多行 n yy
撤销 u
重做 ctrl + r
ZZ ：保存退出
aw 是作用范围，可以看做是函数传递的参数。
```
